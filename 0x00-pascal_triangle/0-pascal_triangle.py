#!/usr/bin/python3
'''A module for working with Pascal's triangle.
'''

'''if 'n' is less than or equal to 0, it returns as an empty list.
create the first row of the triangle with a single element, which is always 1.
iterate from the second row up to the 'n' -th row.
for each row, initialize an empty list called 'row'.
calculate the values of each element in the current row based on the previous row.
   --the first element is always 1.
   --the elements in between are the sum of the corresponding elements in the previous row.
append 1 at the end of the row.
append the completed row to the 'triangle' list.
after the loop ends, return the 'triangle' list representing the pascal's triangle.
you can use the provided 'print_triangle' function to print the pascal's triangle generated by 'pascal_triangle(5)

'''
    def pascal_triangle(n):
        if n <= 0:
            return []
        
        triangle = [[1]]
        for i in range(1, n):
            row = [1]
            for j in range(1, i):
                row.append(triangle[i-1][j-1] + triangle[i-1][j]
            row.append(1)
            triangle.append(row)

        return triangle
